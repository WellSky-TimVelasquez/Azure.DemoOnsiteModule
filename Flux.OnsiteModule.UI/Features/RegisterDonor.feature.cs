// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Flux.OnsiteModule.UI.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RegisterDonor")]
    public partial class RegisterDonorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RegisterDonor.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RegisterDonor", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I login the application as a Blood Centers User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I open Active Drive screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I activate a drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewALWBDonor")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterNewALWBDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewALWBDonor", null, new string[] {
                        "test"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 13
 testRunner.Given("I register a new donor with AL WB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.Then("the donor is in the Onsite Status Query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewALPPDonor")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterNewALPPDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewALPPDonor", null, new string[] {
                        "test"});
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 19
 testRunner.Given("I register a new donor with AL PP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewAUWBDonor")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterNewAUWBDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewAUWBDonor", null, new string[] {
                        "test"});
#line 23
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 24
 testRunner.Given("I register a new donor with AU WB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewDIWBDonor")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterNewDIWBDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewDIWBDonor", null, new string[] {
                        "test"});
#line 28
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 29
 testRunner.Given("I register a new donor with DI WB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewMobilePrefDonor")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterNewMobilePrefDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewMobilePrefDonor", null, new string[] {
                        "test"});
#line 33
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 34
 testRunner.Given("I register a new donor with Mobile Preferred phone number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.Then("Donor is registered with preferred phone number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterDonorOverAgeLimit")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterDonorOverAgeLimit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterDonorOverAgeLimit", null, new string[] {
                        "test"});
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 39
 testRunner.And("Over error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("the donor can be registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterDonorUnderAgeLimit")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void RegisterDonorUnderAgeLimit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterDonorUnderAgeLimit", null, new string[] {
                        "test"});
#line 44
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 45
 testRunner.Given("I register a new donor Under Age Limit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.And("Under error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then("the donor can be registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterExistingDonor")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("111111111", "PAST", "LANCE", "02141980", "M", "DN30120063", null)]
        public virtual void RegisterExistingDonor(string ssn, string lastname, string firstname, string dob, string gender, string donorid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterExistingDonor", null, @__tags);
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 53
 testRunner.Given(string.Format("I have entered {0} in find donor", donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And(string.Format("I register an existing {0} {1} {2} {3} {4} and {5} with AL WB", ssn, lastname, firstname, dob, gender, donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterExistingDonorCheck")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("111111111", "PAST", "LANCE", "02141980", "M", "DN30122256", "200_WESTERN_AVE", "CHICAGO", "IL", "60606", "A_Pos", "CMV-", "1", null)]
        public virtual void RegisterExistingDonorCheck(string ssn, string lastname, string firstname, string dob, string gender, string donorid, string address, string city, string state, string zipcode, string abo, string cmv, string gallon, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterExistingDonorCheck", null, @__tags);
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 62
 testRunner.Given(string.Format("I have entered {0} in find donor", donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
 testRunner.And(string.Format("I register an existing {0} {1} {2} {3} {4} and {5} with AL WB", ssn, lastname, firstname, dob, gender, donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.Then(string.Format("Donor is registered with {0} {1} {2} {3} {4} {5} and {6} information", address, city, state, zipcode, abo, cmv, gallon), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("DeferatInquiry")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void DeferatInquiry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DeferatInquiry", null, new string[] {
                        "test"});
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 71
 testRunner.Given("I register a new donor with AL WB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("enter donor inquiry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("defer the donor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.Then("the donor is displayed in Link Query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OverrideatInquiry")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void OverrideatInquiry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OverrideatInquiry", null, new string[] {
                        "test"});
#line 77
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 78
 testRunner.Given("I register a new donor with AL WB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
 testRunner.And("enter donor inquiry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("override the donor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then("the donor is displayed in Online Status Query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ExistingTempDeferredDonorEligibility")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("111111111", "GRAY", "BILL", "05141999", "M", "DN30122738", null)]
        public virtual void ExistingTempDeferredDonorEligibility(string ssn, string lastname, string firstname, string dob, string gender, string donorid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ExistingTempDeferredDonorEligibility", null, @__tags);
#line 84
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 85
 testRunner.Given(string.Format("I have entered {0} in find donor", donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
 testRunner.And(string.Format("I enter an existing {0} {1} {2} {3} {4} and {5} with AL WB", ssn, lastname, firstname, dob, gender, donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.Then("the eligibility is temporarily deferred", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ExistingPermDeferredDonorEligibility")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("111111111", "CHANG", "RYAN", "02021998", "M", "DN30122737", null)]
        public virtual void ExistingPermDeferredDonorEligibility(string ssn, string lastname, string firstname, string dob, string gender, string donorid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ExistingPermDeferredDonorEligibility", null, @__tags);
#line 93
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 94
 testRunner.Given(string.Format("I have entered {0} in find donor", donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
 testRunner.And(string.Format("I enter an existing {0} {1} {2} {3} {4} and {5} with AL WB", ssn, lastname, firstname, dob, gender, donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.Then("the eligibility is permanently deferred", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("UpdateALWBDonor")]
        [NUnit.Framework.CategoryAttribute("test")]
        public virtual void UpdateALWBDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UpdateALWBDonor", null, new string[] {
                        "test"});
#line 102
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 103
 testRunner.Given("I register a new donor with AL WB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 105
 testRunner.And("I update the registration information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
 testRunner.Then("Donor information is udpated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewALWBDonorwithdonorinformation")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("SARAH", "JONES", "05141990", "F", null)]
        [NUnit.Framework.TestCaseAttribute("OWEN", "HINES", "06201997", "M", null)]
        public virtual void RegisterNewALWBDonorwithdonorinformation(string firstname, string lastname, string dob, string gender, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewALWBDonorwithdonorinformation", null, @__tags);
#line 110
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 111
 testRunner.Given(string.Format("I register a new donor with AL WB and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewALPPDonorwithdonorinformation")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("SARAH", "JONES", "05141990", "F", null)]
        [NUnit.Framework.TestCaseAttribute("OWEN", "HINES", "06201997", "M", null)]
        public virtual void RegisterNewALPPDonorwithdonorinformation(string firstname, string lastname, string dob, string gender, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewALPPDonorwithdonorinformation", null, @__tags);
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 120
 testRunner.Given(string.Format("I register a new donor with AL PP and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 121
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OverrideatInquiryDIWBwithdonor")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("JAMES", "PIKE", "05101990", "M", null)]
        public virtual void OverrideatInquiryDIWBwithdonor(string firstname, string lastname, string dob, string gender, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OverrideatInquiryDIWBwithdonor", null, @__tags);
#line 128
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 129
 testRunner.Given(string.Format("I register a new donor with DI WB and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 130
 testRunner.And("enter donor inquiry with oxygen therapy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("override the donor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.Then("the donor is displayed in Online Status Query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewDIWBDonorwithdonorinformation")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("SARAH", "JONES", "05141990", "F", null)]
        [NUnit.Framework.TestCaseAttribute("OWEN", "HINES", "06201997", "M", null)]
        public virtual void RegisterNewDIWBDonorwithdonorinformation(string firstname, string lastname, string dob, string gender, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewDIWBDonorwithdonorinformation", null, @__tags);
#line 138
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 139
 testRunner.Given(string.Format("I register a new donor with DI WB and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 140
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("DeferatInquirywithdonor")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("RACHEL", "EVANS", "10181990", "F", "19111201", null)]
        public virtual void DeferatInquirywithdonor(string firstname, string lastname, string dob, string gender, string deferralid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DeferatInquirywithdonor", null, @__tags);
#line 147
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 148
 testRunner.Given(string.Format("I register a new donor with AL WB and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 149
 testRunner.And("enter donor inquiry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("defer the donor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.Then("the donor is displayed in Link Query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewALPPAMICDonorwithdonorinformation")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("SARAH", "JONES", "05141990", "F", null)]
        public virtual void RegisterNewALPPAMICDonorwithdonorinformation(string firstname, string lastname, string dob, string gender, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewALPPAMICDonorwithdonorinformation", null, @__tags);
#line 157
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 158
 testRunner.Given(string.Format("I register a new donor with AL PP AMIC and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterExistingDonorALPP")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("111111111", "PAST", "LANCE", "02141980", "M", "DN30120063", null)]
        public virtual void RegisterExistingDonorALPP(string ssn, string lastname, string firstname, string dob, string gender, string donorid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterExistingDonorALPP", null, @__tags);
#line 165
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 166
 testRunner.Given(string.Format("I have entered {0} in find donor", donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 167
 testRunner.And(string.Format("I register an existing {0} {1} {2} {3} {4} and {5} with AL PP", ssn, lastname, firstname, dob, gender, donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterExistingDonorAUPP")]
        [NUnit.Framework.CategoryAttribute("systemtest")]
        [NUnit.Framework.TestCaseAttribute("111111111", "PAST", "LANCE", "02141980", "M", "DN30120063", null)]
        public virtual void RegisterExistingDonorAUPP(string ssn, string lastname, string firstname, string dob, string gender, string donorid, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "systemtest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterExistingDonorAUPP", null, @__tags);
#line 174
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 175
 testRunner.Given(string.Format("I have entered {0} in find donor", donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
 testRunner.And(string.Format("I register an existing {0} {1} {2} {3} {4} and {5} with AU PP", ssn, lastname, firstname, dob, gender, donorid), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("RegisterNewDIDRDonorwithdonorinformation")]
        [NUnit.Framework.TestCaseAttribute("EMILY", "LEE", "08101960", "F", null)]
        [NUnit.Framework.TestCaseAttribute("SOPHIA", "KIM", "08101961", "F", null)]
        [NUnit.Framework.TestCaseAttribute("AMELIA", "MORROW", "08101962", "F", null)]
        [NUnit.Framework.TestCaseAttribute("HARPER", "MISTRY", "08101963", "F", null)]
        [NUnit.Framework.TestCaseAttribute("EVELYN", "PARKER", "08101964", "F", null)]
        [NUnit.Framework.TestCaseAttribute("ABIGAIL", "RAMSEY", "08101965", "F", null)]
        [NUnit.Framework.TestCaseAttribute("EMILY", "RIVERA", "08101966", "F", null)]
        [NUnit.Framework.TestCaseAttribute("LIZ", "ROBERTSON", "08101967", "F", null)]
        [NUnit.Framework.TestCaseAttribute("MILA", "ROGERS", "08101968", "F", null)]
        [NUnit.Framework.TestCaseAttribute("ELLA", "RANGEL", "08101969", "F", null)]
        [NUnit.Framework.TestCaseAttribute("AVERY", "MULLARKEY", "08101970", "F", null)]
        [NUnit.Framework.TestCaseAttribute("SOFIA", "THALLER", "08101971", "F", null)]
        [NUnit.Framework.TestCaseAttribute("CAMILA", "VARGAS", "08101972", "F", null)]
        [NUnit.Framework.TestCaseAttribute("ARIA", "VIERA", "08101973", "F", null)]
        [NUnit.Framework.TestCaseAttribute("MADISON", "WONG", "08101974", "F", null)]
        [NUnit.Framework.TestCaseAttribute("VICTORIA", "WILSON", "08101975", "F", null)]
        [NUnit.Framework.TestCaseAttribute("LUNA", "ASHBY", "08101976", "F", null)]
        [NUnit.Framework.TestCaseAttribute("GRACE", "BERKSTEIN", "08101977", "F", null)]
        [NUnit.Framework.TestCaseAttribute("CHLOE", "BRANTON", "08101978", "F", null)]
        [NUnit.Framework.TestCaseAttribute("LAYLA", "TAN", "08101979", "F", null)]
        [NUnit.Framework.TestCaseAttribute("RILEY", "SUH", "08101980", "F", null)]
        [NUnit.Framework.TestCaseAttribute("ZOEY", "SOLON", "08101981", "F", null)]
        [NUnit.Framework.TestCaseAttribute("PENELOPE", "SHEA", "08101982", "F", null)]
        [NUnit.Framework.TestCaseAttribute("LEAH", "SREY", "08101983", "F", null)]
        [NUnit.Framework.TestCaseAttribute("HAZEL", "WATKINS", "08101984", "F", null)]
        [NUnit.Framework.TestCaseAttribute("VIOLET", "HOWEY", "08101985", "F", null)]
        [NUnit.Framework.TestCaseAttribute("NATALIE", "HILL", "08101986", "F", null)]
        [NUnit.Framework.TestCaseAttribute("STELLA", "GARCIA", "08101987", "F", null)]
        [NUnit.Framework.TestCaseAttribute("ELLIE", "KUMAR", "08101988", "F", null)]
        [NUnit.Framework.TestCaseAttribute("AUBREY", "MARLETT", "08101989", "F", null)]
        [NUnit.Framework.TestCaseAttribute("ADDISON", "DIAZ", "08101990", "F", null)]
        public virtual void RegisterNewDIDRDonorwithdonorinformation(string firstname, string lastname, string dob, string gender, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("RegisterNewDIDRDonorwithdonorinformation", null, exampleTags);
#line 182
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 183
 testRunner.Given(string.Format("I register a new donor with DI DR and {0} {1} {2} {3}", firstname, lastname, dob, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
 testRunner.Then("Donor is registered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
